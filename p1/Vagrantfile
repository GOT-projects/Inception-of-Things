# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'json'
if File.exist?('./confs/config.json')
  begin
    data = JSON.parse(File.read('./confs/config.json'))
  rescue JSON::ParserError => e
    puts "Failed to parse config.json: #{e.message}"
    exit 1
  end
else
  puts "config.json not found"
  exit 1
end

if File.exist?('./confs/id_rsa')
  puts "key ssh exist"
else
  system("ssh-keygen -f ./confs/id_rsa -t rsa -N ''")
end

Vagrant.configure("2") do |config|
  config.vm.define data["server"]["name"] do |server|
    server.vm.box = data["box"]
    server.vm.network "private_network", ip: data["server"]["ip"], virtualbox__intnet: true
    server.vm.hostname = "jmilhasS"
    server.vm.provider data["provider"] do |v|
      v.name = data["server"]["name"]
      v.memory = data["server"]["ram"]
      v.cpus = data["server"]["cpu"]
    end
  end

  config.vm.define data["serverworker"]["name"] do |serverworker|
    serverworker.vm.box = data["box"]
    serverworker.vm.network "private_network", ip: data["serverworker"]["ip"], virtualbox__intnet: true
    serverworker.vm.hostname = "jmilhasSK"
    serverworker.vm.provider data["provider"] do |v|
      v.name = data["serverworker"]["name"]
      v.memory = data["serverworker"]["ram"]
      v.cpus = data["serverworker"]["cpu"]
    end
   end
  config.vm.provision "file", source: "./confs/id_rsa", destination: "/home/vagrant/tmp/id_rsa"
  config.vm.provision "file", source: "./confs/id_rsa.pub", destination: "/home/vagrant/tmp/id_rsa.pub"
  config.vm.provision "shell", privileged: true, path: "./script/install.sh"
end
